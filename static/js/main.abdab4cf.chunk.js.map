{"version":3,"sources":["components/clock/Clock.tsx","App.tsx","index.tsx"],"names":["getDate","Date","toUTCString","slice","Clock","state","date","timerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAWMA,EAAU,kBAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAE9CC,EAAb,4MACEC,MAAQ,CACNC,KAAMN,KAFV,EAKEO,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,KAAMN,MACtBY,QAAQC,KAAK,EAAKR,MAAMC,QACvB,OAXP,gCAcE,SAAmBQ,GACjB,IAAQC,EAAcP,KAAKQ,MAAnBD,UAEJD,EAAUC,YAAcA,GAC1BH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDA,MAlB9D,kCAsBE,WACEN,OAAOS,cAAcV,KAAKD,WAvB9B,oBA0BE,WACE,IAAQD,EAASE,KAAKH,MAAdC,KACAS,EAAcP,KAAKQ,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGb,WAvCX,GAA2Bc,aCT3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWrB,OAAO,GAE3C,MAAM,SAAN,OAAgBmB,GAQX,IAAMG,EAAb,4MACEpB,MAAQ,CACNU,UAAW,UACXW,UAAU,GAHd,EAMEnB,QAAU,EANZ,uDAQE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEI,UAAWM,QAC1B,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKnB,SAAS,CAAEe,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKjB,SAAS,CAAEe,UAAU,SApBhC,kCAwBE,WACEjB,OAAOS,cAAcV,KAAKD,WAzB9B,oBA4BE,WACE,MAGIC,KAAKH,MAFPU,EADF,EACEA,UACAW,EAFF,EAEEA,SAGF,OACE,sBAAKP,UAAU,MAAf,UACE,6CAECO,GAAY,cAAC,EAAD,CAAOX,UAAWA,WAtCvC,GAAyBK,aCZzBW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.abdab4cf.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  date: string,\n};\n\nconst getDate = () => new Date().toUTCString().slice(-12, -4);\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: getDate(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: getDate() });\n      console.info(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName } = this.props;\n\n    if (prevProps.clockName !== clockName) {\n      console.debug(`Renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const {\n      clockName,\n      hasClock,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}